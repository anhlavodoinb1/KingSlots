/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var map_field_entry_pb = require('./map_field_entry_pb.js');
goog.exportSymbol('proto.BINGameHistory', null, global);
goog.exportSymbol('proto.BINLookUpGameHistoryRequest', null, global);
goog.exportSymbol('proto.BINLookUpGameHistoryResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BINLookUpGameHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BINLookUpGameHistoryRequest.repeatedFields_, null);
};
goog.inherits(proto.BINLookUpGameHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.BINLookUpGameHistoryRequest.displayName = 'proto.BINLookUpGameHistoryRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BINLookUpGameHistoryRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BINLookUpGameHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BINLookUpGameHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BINLookUpGameHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.BINLookUpGameHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstresult: jspb.Message.getField(msg, 1),
    maxresult: jspb.Message.getField(msg, 2),
    orderbyfield: jspb.Message.getField(msg, 3),
    asc: jspb.Message.getField(msg, 4),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    map_field_entry_pb.BINMapFieldEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BINLookUpGameHistoryRequest}
 */
proto.BINLookUpGameHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BINLookUpGameHistoryRequest;
  return proto.BINLookUpGameHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BINLookUpGameHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BINLookUpGameHistoryRequest}
 */
proto.BINLookUpGameHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFirstresult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderbyfield(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsc(value);
      break;
    case 5:
      var value = new map_field_entry_pb.BINMapFieldEntry;
      reader.readMessage(value,map_field_entry_pb.BINMapFieldEntry.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.BINLookUpGameHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.BINLookUpGameHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BINLookUpGameHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.BINLookUpGameHistoryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = this.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      map_field_entry_pb.BINMapFieldEntry.serializeBinaryToWriter
    );
  }
};


/**
 * required int32 firstResult = 1;
 * @return {number}
 */
proto.BINLookUpGameHistoryRequest.prototype.getFirstresult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.BINLookUpGameHistoryRequest.prototype.setFirstresult = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.BINLookUpGameHistoryRequest.prototype.clearFirstresult = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINLookUpGameHistoryRequest.prototype.hasFirstresult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 maxResult = 2;
 * @return {number}
 */
proto.BINLookUpGameHistoryRequest.prototype.getMaxresult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.BINLookUpGameHistoryRequest.prototype.setMaxresult = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.BINLookUpGameHistoryRequest.prototype.clearMaxresult = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINLookUpGameHistoryRequest.prototype.hasMaxresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 orderByField = 3;
 * @return {number}
 */
proto.BINLookUpGameHistoryRequest.prototype.getOrderbyfield = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.BINLookUpGameHistoryRequest.prototype.setOrderbyfield = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.BINLookUpGameHistoryRequest.prototype.clearOrderbyfield = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINLookUpGameHistoryRequest.prototype.hasOrderbyfield = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool asc = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.BINLookUpGameHistoryRequest.prototype.getAsc = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.BINLookUpGameHistoryRequest.prototype.setAsc = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.BINLookUpGameHistoryRequest.prototype.clearAsc = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINLookUpGameHistoryRequest.prototype.hasAsc = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated BINMapFieldEntry args = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.BINMapFieldEntry>}
 */
proto.BINLookUpGameHistoryRequest.prototype.getArgsList = function() {
  return /** @type{!Array.<!proto.BINMapFieldEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, map_field_entry_pb.BINMapFieldEntry, 5));
};


/** @param {!Array.<!proto.BINMapFieldEntry>} value */
proto.BINLookUpGameHistoryRequest.prototype.setArgsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.BINMapFieldEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BINMapFieldEntry}
 */
proto.BINLookUpGameHistoryRequest.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.BINMapFieldEntry, opt_index);
};


proto.BINLookUpGameHistoryRequest.prototype.clearArgsList = function() {
  this.setArgsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BINGameHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BINGameHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.BINGameHistory.displayName = 'proto.BINGameHistory';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BINGameHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.BINGameHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BINGameHistory} msg The msg instance to transform.
 * @return {!Object}
 */
proto.BINGameHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    first: jspb.Message.getField(msg, 1),
    second: jspb.Message.getField(msg, 2),
    third: jspb.Message.getField(msg, 3),
    fourth: jspb.Message.getField(msg, 4),
    fifth: jspb.Message.getField(msg, 5),
    sixth: jspb.Message.getField(msg, 6),
    seventh: jspb.Message.getField(msg, 7),
    eighth: jspb.Message.getField(msg, 8),
    ninth: jspb.Message.getField(msg, 9),
    tenth: jspb.Message.getField(msg, 10)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BINGameHistory}
 */
proto.BINGameHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BINGameHistory;
  return proto.BINGameHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BINGameHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BINGameHistory}
 */
proto.BINGameHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirst(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecond(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThird(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFourth(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFifth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSixth(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeventh(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEighth(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNinth(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.BINGameHistory} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.BINGameHistory.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BINGameHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.BINGameHistory.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string first = 1;
 * @return {string}
 */
proto.BINGameHistory.prototype.getFirst = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setFirst = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.BINGameHistory.prototype.clearFirst = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasFirst = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string second = 2;
 * @return {string}
 */
proto.BINGameHistory.prototype.getSecond = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setSecond = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.BINGameHistory.prototype.clearSecond = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasSecond = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string third = 3;
 * @return {string}
 */
proto.BINGameHistory.prototype.getThird = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setThird = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.BINGameHistory.prototype.clearThird = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasThird = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string fourth = 4;
 * @return {string}
 */
proto.BINGameHistory.prototype.getFourth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setFourth = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.BINGameHistory.prototype.clearFourth = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasFourth = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string fifth = 5;
 * @return {string}
 */
proto.BINGameHistory.prototype.getFifth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setFifth = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.BINGameHistory.prototype.clearFifth = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasFifth = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string sixth = 6;
 * @return {string}
 */
proto.BINGameHistory.prototype.getSixth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setSixth = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.BINGameHistory.prototype.clearSixth = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasSixth = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string seventh = 7;
 * @return {string}
 */
proto.BINGameHistory.prototype.getSeventh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setSeventh = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.BINGameHistory.prototype.clearSeventh = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasSeventh = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string eighth = 8;
 * @return {string}
 */
proto.BINGameHistory.prototype.getEighth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setEighth = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.BINGameHistory.prototype.clearEighth = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasEighth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string ninth = 9;
 * @return {string}
 */
proto.BINGameHistory.prototype.getNinth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setNinth = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.BINGameHistory.prototype.clearNinth = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasNinth = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string tenth = 10;
 * @return {string}
 */
proto.BINGameHistory.prototype.getTenth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.BINGameHistory.prototype.setTenth = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.BINGameHistory.prototype.clearTenth = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINGameHistory.prototype.hasTenth = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BINLookUpGameHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BINLookUpGameHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.BINLookUpGameHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.BINLookUpGameHistoryResponse.displayName = 'proto.BINLookUpGameHistoryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BINLookUpGameHistoryResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BINLookUpGameHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BINLookUpGameHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BINLookUpGameHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.BINLookUpGameHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsecode: jspb.Message.getField(msg, 1),
    message: jspb.Message.getField(msg, 2),
    historiesList: jspb.Message.toObjectList(msg.getHistoriesList(),
    proto.BINGameHistory.toObject, includeInstance),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    map_field_entry_pb.BINMapFieldEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BINLookUpGameHistoryResponse}
 */
proto.BINLookUpGameHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BINLookUpGameHistoryResponse;
  return proto.BINLookUpGameHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BINLookUpGameHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BINLookUpGameHistoryResponse}
 */
proto.BINLookUpGameHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResponsecode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.BINGameHistory;
      reader.readMessage(value,proto.BINGameHistory.deserializeBinaryFromReader);
      msg.addHistories(value);
      break;
    case 4:
      var value = new map_field_entry_pb.BINMapFieldEntry;
      reader.readMessage(value,map_field_entry_pb.BINMapFieldEntry.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.BINLookUpGameHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.BINLookUpGameHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BINLookUpGameHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.BINLookUpGameHistoryResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getHistoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.BINGameHistory.serializeBinaryToWriter
    );
  }
  f = this.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      map_field_entry_pb.BINMapFieldEntry.serializeBinaryToWriter
    );
  }
};


/**
 * required bool responseCode = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.BINLookUpGameHistoryResponse.prototype.getResponsecode = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.BINLookUpGameHistoryResponse.prototype.setResponsecode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.BINLookUpGameHistoryResponse.prototype.clearResponsecode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINLookUpGameHistoryResponse.prototype.hasResponsecode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.BINLookUpGameHistoryResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.BINLookUpGameHistoryResponse.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.BINLookUpGameHistoryResponse.prototype.clearMessage = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.BINLookUpGameHistoryResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated BINGameHistory histories = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.BINGameHistory>}
 */
proto.BINLookUpGameHistoryResponse.prototype.getHistoriesList = function() {
  return /** @type{!Array.<!proto.BINGameHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BINGameHistory, 3));
};


/** @param {!Array.<!proto.BINGameHistory>} value */
proto.BINLookUpGameHistoryResponse.prototype.setHistoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.BINGameHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BINGameHistory}
 */
proto.BINLookUpGameHistoryResponse.prototype.addHistories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.BINGameHistory, opt_index);
};


proto.BINLookUpGameHistoryResponse.prototype.clearHistoriesList = function() {
  this.setHistoriesList([]);
};


/**
 * repeated BINMapFieldEntry args = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.BINMapFieldEntry>}
 */
proto.BINLookUpGameHistoryResponse.prototype.getArgsList = function() {
  return /** @type{!Array.<!proto.BINMapFieldEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, map_field_entry_pb.BINMapFieldEntry, 4));
};


/** @param {!Array.<!proto.BINMapFieldEntry>} value */
proto.BINLookUpGameHistoryResponse.prototype.setArgsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.BINMapFieldEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BINMapFieldEntry}
 */
proto.BINLookUpGameHistoryResponse.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.BINMapFieldEntry, opt_index);
};


proto.BINLookUpGameHistoryResponse.prototype.clearArgsList = function() {
  this.setArgsList([]);
};


goog.object.extend(exports, proto);
